apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.postgresqlappName }}
  namespace: {{ .Values.nameSpace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.postgresqlappName }}
  serviceName: {{ .Values.postgresqlsvcName }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.postgresqlappName }}
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      initContainers:    # init container to change permission so we can mount our pv
      - name: volume-mount-hack
        image: busybox
        command: ["sh", "-c", "chmod 755 /bitnami/postgresql/data && chown 1001:0 /bitnami/postgresql/data"]
        volumeMounts:
        - name: postgredb
          mountPath: /bitnami/postgresql/data
      containers:
      - name: postgresql
        image: "{{ .Values.postgresImage.name }}:{{ .Values.postgresImage.tag }}"
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: {{ .Values.postgresconfigMap.name }}
        - secretRef:
            name: {{ .Values.postgresSecret.name }}
        volumeMounts:
        - name: postgredb
          mountPath: /bitnami/postgresql/data
        readinessProbe:
          exec:
            command:
            - pg_isready
          initialDelaySeconds: 2
          periodSeconds: 2
        resources:
          limits:
            cpu: "500m"
            memory: "256Mi"
      volumes:
      - name: postgredb
        persistentVolumeClaim:
          claimName: {{ .Values.pvcName }}
        
